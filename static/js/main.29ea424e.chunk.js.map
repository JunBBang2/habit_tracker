{"version":3,"sources":["components/habit.jsx","components/habitAddForm.jsx","components/habits.jsx","components/navbar.jsx","app.js","components/simpleHabit.jsx","index.js"],"names":["Habit","handleIncrement","props","onIncrement","habit","handleDecrement","onDecrement","handleDelete","onDelete","this","name","count","className","onClick","class","PureComponent","HabitAddForm","memo","inputRef","React","createRef","onSubmit","event","preventDefault","current","value","onAdd","ref","type","placeholder","Habits","handleAdd","habits","map","id","onReset","Component","Navbar","totalCount","SimpleHabit","useState","setCount","spanRef","useRef","useCallback","useEffect","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAuDeA,E,4MA7CbC,gBAAkB,WAChB,EAAKC,MAAMC,YAAY,EAAKD,MAAME,Q,EAGpCC,gBAAkB,WAChB,EAAKH,MAAMI,YAAY,EAAKJ,MAAME,Q,EAGpCG,aAAe,WACb,EAAKL,MAAMM,SAAS,EAAKN,MAAME,Q,uDAhBjC,c,kCAIA,c,oBAeA,WAAU,IAAD,EACiBK,KAAKP,MAAME,MAA3BM,EADD,EACCA,KAAMC,EADP,EACOA,MAEd,OACE,qBAAIC,UAAU,QAAd,UACE,sBAAMA,UAAU,aAAhB,SAA8BF,IAC9B,sBAAME,UAAU,cAAhB,SAA+BD,IAE/B,wBACEC,UAAU,8BACVC,QAASJ,KAAKR,gBAFhB,SAIE,mBAAGa,MAAM,yBAGX,wBACEF,UAAU,8BACVC,QAASJ,KAAKJ,gBAFhB,SAIE,mBAAGS,MAAM,0BAGX,wBACEF,UAAU,4BACVC,QAASJ,KAAKF,aAFhB,SAIE,mBAAGO,MAAM,0B,GA9CCC,iBCuBLC,EAvBMC,gBAAK,SAACf,GACzB,IAAMgB,EAAWC,IAAMC,YASvB,OACE,uBAAMR,UAAU,WAAWS,SARZ,SAACC,GAChBA,EAAMC,iBACN,IAAMb,EAAOQ,EAASM,QAAQC,MAC9Bf,GAAQR,EAAMwB,MAAMhB,GACpBQ,EAASM,QAAQC,MAAQ,IAIzB,UACE,uBACEE,IAAKT,EACLU,KAAK,OACLhB,UAAU,YACViB,YAAY,UAEd,wBAAQjB,UAAU,aAAlB,uBCwBSkB,E,4MAxCb7B,gBAAkB,SAACG,GACjB,EAAKF,MAAMC,YAAYC,I,EAGzBC,gBAAkB,SAACD,GACjB,EAAKF,MAAMI,YAAYF,I,EAGzBG,aAAe,SAACH,GACd,EAAKF,MAAMM,SAASJ,I,EAGtB2B,UAAY,SAACrB,GACX,EAAKR,MAAMwB,MAAMhB,I,4CAGnB,WAAU,IAAD,OACP,OACE,qCACE,cAAC,EAAD,CAAcgB,MAAOjB,KAAKsB,YAC1B,6BACGtB,KAAKP,MAAM8B,OAAOC,KAAI,SAAC7B,GAAD,OACrB,cAAC,EAAD,CAEEA,MAAOA,EACPD,YAAa,EAAKF,gBAClBK,YAAa,EAAKD,gBAClBG,SAAU,EAAKD,cAJVH,EAAM8B,SASjB,wBAAQtB,UAAU,eAAeC,QAASJ,KAAKP,MAAMiC,QAArD,8B,GAjCaC,aCWNC,E,4JAXX,WACI,OACI,sBAAKzB,UAAU,SAAf,UACI,mBAAGA,UAAU,4BACb,iDACA,sBAAMA,UAAU,yBAAhB,SAA0CH,KAAKP,MAAMoC,oB,GANhDvB,iB,GCGHqB,Y,aCsBHG,EAzBK,SAACrC,GAAW,IAAD,EACHsC,mBAAS,GADN,mBACtB7B,EADsB,KACf8B,EADe,KAEvBC,EAAUC,mBAEV1C,EAAkB2C,uBAAY,WAClCH,EAAS9B,EAAQ,MAOnB,OAJAkC,qBAAU,WACRC,QAAQC,IAAI,oCAIZ,qBAAInC,UAAU,QAAd,UACE,sBAAMe,IAAKe,EAAS9B,UAAU,aAA9B,qBAGA,sBAAMA,UAAU,cAAhB,SAA+BD,IAC/B,wBAAQC,UAAU,8BAA8BC,QAASZ,EAAzD,SACE,mBAAGW,UAAU,6BCdrBoC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.29ea424e.chunk.js","sourcesContent":["import React, { PureComponent } from \"react\";\r\n\r\nclass Habit extends PureComponent {\r\n  componentDidMount() {\r\n\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    \r\n  }\r\n  handleIncrement = () => {\r\n    this.props.onIncrement(this.props.habit);\r\n  };\r\n\r\n  handleDecrement = () => {\r\n    this.props.onDecrement(this.props.habit);\r\n  };\r\n\r\n  handleDelete = () => {\r\n    this.props.onDelete(this.props.habit);\r\n  };\r\n\r\n  render() {\r\n    const { name, count } = this.props.habit;\r\n\r\n    return (\r\n      <li className=\"habit\">\r\n        <span className=\"habit-name\">{name}</span>\r\n        <span className=\"habit-count\">{count}</span>\r\n\r\n        <button\r\n          className=\"habit-button habit-increase\"\r\n          onClick={this.handleIncrement}\r\n        >\r\n          <i class=\"fas fa-plus-square\"></i>\r\n        </button>\r\n\r\n        <button\r\n          className=\"habit-button habit-decrease\"\r\n          onClick={this.handleDecrement}\r\n        >\r\n          <i class=\"fas fa-minus-square\"></i>\r\n        </button>\r\n\r\n        <button\r\n          className=\"habit-button habit-delete\"\r\n          onClick={this.handleDelete}\r\n        >\r\n          <i class=\"fas fa-trash\"></i>\r\n        </button>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Habit;\r\n","import React, { memo } from \"react\";\r\n\r\nconst HabitAddForm = memo((props) => {\r\n  const inputRef = React.createRef(); //입력 값을 받아오기 위하여 하는 작업 querySelector와 비슷\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault(); // submit이 실행 되었을대 REFRESH가 더이상 발생하지 않도록 하는 작업\r\n    const name = inputRef.current.value;\r\n    name && props.onAdd(name);\r\n    inputRef.current.value = \"\";\r\n  };\r\n\r\n  return (\r\n    <form className=\"add-form\" onSubmit={onSubmit}>\r\n      <input\r\n        ref={inputRef}\r\n        type=\"text\"\r\n        className=\"add-input\"\r\n        placeholder=\"Habit\"\r\n      />\r\n      <button className=\"add-button\">Add</button>\r\n    </form>\r\n  );\r\n});\r\n\r\nexport default HabitAddForm;\r\n","import React, { Component } from \"react\";\r\nimport Habit from \"./habit\";\r\nimport HabitAddForm from \"./habitAddForm\";\r\nclass Habits extends Component {\r\n  handleIncrement = (habit) => {\r\n    this.props.onIncrement(habit);\r\n  };\r\n\r\n  handleDecrement = (habit) => {\r\n    this.props.onDecrement(habit);\r\n  };\r\n\r\n  handleDelete = (habit) => {\r\n    this.props.onDelete(habit);\r\n  };\r\n\r\n  handleAdd = (name) => {\r\n    this.props.onAdd(name);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <HabitAddForm onAdd={this.handleAdd} />\r\n        <ul>\r\n          {this.props.habits.map((habit) => (\r\n            <Habit\r\n              key={habit.id}\r\n              habit={habit}\r\n              onIncrement={this.handleIncrement}\r\n              onDecrement={this.handleDecrement}\r\n              onDelete={this.handleDelete}\r\n            />\r\n          ))}\r\n        </ul>\r\n\r\n        <button className=\"habits-reset\" onClick={this.props.onReset}>\r\n          Reset All\r\n        </button>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Habits;\r\n","import React, { PureComponent } from 'react';\r\n\r\nclass Navbar extends PureComponent {\r\n    render() {\r\n        return (\r\n            <div className=\"navbar\">\r\n                <i className=\"navbar-logo fas fa-leaf\"></i>\r\n                <span>Habit Tracker</span>\r\n                <span className=\"className navbar-count\">{this.props.totalCount}</span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React, { Component } from \"react\";\nimport \"./app.css\";\nimport Habits from \"./components/habits\";\nimport Navbar from \"./components/navbar\";\n\nclass App extends Component {\n  state = {\n    habits: [\n      { id: 1, name: \"Reading\", count: 0 },\n      { id: 2, name: \"Running\", count: 0 },\n      { id: 3, name: \"Coding\", count: 0 },\n    ],\n  };\n\n  handleIncrement = (habit) => {\n    const habits = this.state.habits.map((item) => {\n      if (item.id === habit.id) {\n        return { ...habit, count: habit.count + 1 };\n      } else {\n        return item;\n      }\n    });\n    this.setState({ habits });\n  };\n\n  handleDecrement = (habit) => {\n    const habits = this.state.habits.map((item) => {\n      if (item.id === habit.id) {\n        const count = habit.count - 1;\n        return { ...habit, count: count < 0 ? 0 : count };\n      } else {\n        return item;\n      }\n    });\n    this.setState({ habits });\n  };\n\n  handleDelete = (habit) => {\n    const habits = this.state.habits.filter((item) => item.id !== habit.id);\n    this.setState({ habits });\n  };\n\n  handleAdd = (name) => {\n    const habits = [...this.state.habits, { id: Date.now(), name, count: 0 }];\n    this.setState({ habits });\n  };\n\n  handleReset = () => {\n    const habits = this.state.habits.map((habit) => {\n      if (habit.count !== 0) {\n        return { ...habit, count: 0 };\n      }\n      return habit;\n    });\n    this.setState({ habits });\n  };\n\n  render() {\n    return (\n      <>\n        <Navbar\n          totalCount={this.state.habits.filter((item) => item.count > 0).length}\n        />\n        <Habits\n          habits={this.state.habits}\n          onIncrement={this.handleIncrement}\n          onDecrement={this.handleDecrement}\n          onDelete={this.handleDelete}\n          onAdd={this.handleAdd}\n          onReset={this.handleReset}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\r\n\r\nconst SimpleHabit = (props) => {\r\n  const [count, setCount] = useState(0); //useState를 쓰면 React에서 state값이 알아서 저장\r\n  const spanRef = useRef();\r\n\r\n  const handleIncrement = useCallback(() => {\r\n    setCount(count + 1);\r\n  });\r\n\r\n  useEffect(() => {\r\n    console.log(\"mounted & updated!: ${count} \");\r\n  });\r\n\r\n  return (\r\n    <li className=\"habit\">\r\n      <span ref={spanRef} className=\"habit-name\">\r\n        Reading\r\n      </span>\r\n      <span className=\"habit-count\">{count}</span>\r\n      <button className=\"habit-button habit-increase\" onClick={handleIncrement}>\r\n        <i className=\"fas fa-plus-square\"></i>\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default SimpleHabit;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport '@fortawesome/fontawesome-free/js/all.js';\nimport SimpleHabit from './components/simpleHabit';\n\nReactDOM.render(\n  <React.StrictMode>\n    <SimpleHabit/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}